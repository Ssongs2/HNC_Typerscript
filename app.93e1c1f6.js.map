{"version":3,"sources":["src/store.ts","src/core/router.ts","src/core/view.ts","src/core/api.ts","src/config.ts","src/page/news-detail.views.ts","src/page/news-feed-view.ts","src/page/index.ts","src/app.ts"],"names":[],"mappings":"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","file":"app.93e1c1f6.js","sourceRoot":"..","sourcesContent":["import { NewsFeed, NewsStore } from './types';\r\n\r\n// NewsStore를 구현한 Class임을 명시\r\nexport default class Store implements NewsStore {\r\n    private feeds: NewsFeed[];\r\n    private _currentPage: number;\r\n    private totalPage: number;\r\n\r\n    constructor() {\r\n        this.feeds = [];\r\n        this._currentPage = 1;\r\n        this.totalPage = 1;\r\n    }\r\n\r\n    get currentPage() {\r\n        return this._currentPage; // 내부에서 쓰는 경우 함수와 변수가 이름이 겹치면, _를 추가해줌.\r\n    }\r\n\r\n    set currentPage(page: number) {\r\n        this._currentPage = page;\r\n    }\r\n\r\n    get nextPage(): number {\r\n        return this.currentPage + 1 <= this.totalPage ? this.currentPage + 1 : this.currentPage\r\n    }\r\n\r\n    get prevPage(): number {\r\n        return this._currentPage > 1 ? this._currentPage - 1 : 1\r\n    }\r\n\r\n    get numberOfFeed(): number {\r\n        return this.feeds.length;\r\n    }\r\n\r\n    get hasFeeds(): boolean {\r\n        return this.feeds.length > 0;\r\n    }\r\n\r\n    getAllFeeds(): NewsFeed[] {\r\n        return this.feeds;\r\n    }\r\n\r\n    getFeed(position: number): NewsFeed {\r\n        return this.feeds[position]\r\n    }\r\n\r\n    setFeeds(feeds: NewsFeed[]): void {\r\n        this.feeds = feeds.map(feed => ({ // spead operator\r\n            ...feed,\r\n            read: false\r\n        }));\r\n        this.totalPage = Number(this.feeds.length / 10);\r\n    }\r\n\r\n    makeRead(id: number): void {\r\n        const feed = this.feeds.find((feed: NewsFeed) => feed.id === id);\r\n\r\n        if (feed) {\r\n            feed.read = true;\r\n        }\r\n    }\r\n}","import { RouteInfo } from '../types'\r\nimport View from './view';\r\n\r\nexport default class Router {\r\n    routeTable: RouteInfo[];\r\n    defaultRoute: RouteInfo | null;\r\n    // RouteInfo, RouteInfo[]\r\n\r\n    constructor() {\r\n\r\n        window.addEventListener('hashchange', this.route.bind(this));\r\n        // this.route 라고만 지정해놓으면 window가 작동시키는데 Router context로 인지가 안되서\r\n        // 고정시켜줄려면 bind 사용\r\n\r\n        this.routeTable = [];\r\n        this.defaultRoute = null;\r\n    }\r\n\r\n    setDefaultPage(page: View) {\r\n        this.defaultRoute = { path: '', page }\r\n    }\r\n\r\n    addRoutePath(path: string, page: View): void {\r\n        this.routeTable.push({ path, page });\r\n    }\r\n\r\n    route() {\r\n        const routePath = location.hash;\r\n\r\n        if (routePath === '' && this.defaultRoute) {\r\n            this.defaultRoute.page.render()\r\n        }\r\n\r\n        for (const routeInfo of this.routeTable) {\r\n            if (routePath.indexOf(routeInfo.path) >= 0) {\r\n                routeInfo.page.render();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nexport default abstract class View {\r\n    private template: string;\r\n    private renderTemplate: string;\r\n    private container: HTMLElement;\r\n    private htmlList: string[];\r\n\r\n    constructor(containerId: string, template: string) {\r\n        const containerElement = document.getElementById(containerId)\r\n\r\n        if (!containerElement) {\r\n            throw '최상위 컨테이너가 없어 UI를 진행하지 못합니다.'\r\n        }\r\n\r\n        this.container = containerElement;\r\n        this.template = template;\r\n        this.renderTemplate = template;\r\n        this.htmlList = [];\r\n    }\r\n\r\n    // type을 방어한다 -> typeguard\r\n    protected updateView(): void {\r\n        this.container.innerHTML = this.renderTemplate;\r\n        this.renderTemplate = this.template;\r\n    }\r\n\r\n    protected addHtml(htmlString: string): void {\r\n        this.htmlList.push(htmlString);\r\n    }\r\n\r\n    protected getHtml(): string {\r\n        const snapshot = this.htmlList.join('');\r\n        this.clearHtmlList();\r\n        return snapshot\r\n    }\r\n\r\n    private clearHtmlList(): void {\r\n        this.htmlList = [];\r\n    }\r\n\r\n    protected setTemplateData(key: string, value: string): void {\r\n        this.renderTemplate = this.renderTemplate.replace(`{{__${key}__}}`, value)\r\n    }\r\n\r\n    abstract render(): void;\r\n}\r\n","import { NewsFeed, NewsDetail, News } from '../types';\r\n\r\nexport class Api {\r\n    xhr: XMLHttpRequest;\r\n    url: string;\r\n\r\n    constructor(url: string) {\r\n        this.xhr = new XMLHttpRequest();\r\n        this.url = url;\r\n    }\r\n\r\n    // xhr의 다음 버전 보완재로 나오는 차세대 API\r\n    async request<AjaxResponse>(): Promise<AjaxResponse> {\r\n        const response = await fetch(this.url); // 동기 처럼 보인다?\r\n        return await response.json() as AjaxResponse\r\n        // fetch(this.url)\r\n        //     .then(response => response.json())\r\n        //     .then(cb)\r\n        //     .catch(() => {\r\n        //         console.error('데이터를 불러오지 못했습니다.')\r\n        //     })\r\n    }\r\n\r\n}\r\n\r\nexport class NewsFeedApi extends Api {\r\n    constructor(url: string) {\r\n        super(url);\r\n    }\r\n    async getData(): Promise<NewsFeed[]> {\r\n        return this.request<NewsFeed[]>();\r\n    }\r\n}\r\n\r\nexport class NewsDetailApi extends Api {\r\n    constructor(url: string) {\r\n        super(url);\r\n    }\r\n    async getData(): Promise<NewsDetail> {\r\n        return this.request<NewsDetail>();\r\n    }\r\n}","export const NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\r\nexport const CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';","import View from '../core/view';\r\nimport { NewsDetailApi } from \"../core/api\";\r\nimport { NewsDetail, NewsComments, NewsStore } from \"../types\";\r\nimport { CONTENT_URL } from \"../config\";\r\n\r\nconst template = `\r\n<div class=\"bg-gray-600 min-h-screen pb-8\">\r\n  <div class=\"bg-white text-xl\">\r\n    <div class=\"mx-auto px-4\">\r\n      <div class=\"flex justify-between items-center py-6\">\r\n        <div class=\"flex justify-start\">\r\n          <h1 class=\"font-extrabold\">Hacker News</h1>\r\n        </div>\r\n        <div class=\"items-center justify-end\">\r\n          <a href=\"#/page/{{__currentPage__}}\" class=\"text-gray-500\">\r\n            <i class=\"fa fa-times\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"h-full border rounded-xl bg-white m-6 p-4 \">\r\n    <h2>{{__title__}}</h2>\r\n    <div class=\"text-gray-400 h-20\">\r\n      {{__content__}}\r\n    </div>\r\n\r\n    {{__comments__}}\r\n\r\n  </div>\r\n</div>\r\n`\r\n\r\nexport default class NewsDetailView extends View {\r\n  private store: NewsStore;\r\n\r\n  constructor(containerId: string, store: NewsStore) {\r\n    super(containerId, template);\r\n\r\n    this.store = store;\r\n  }\r\n\r\n  render = async (): Promise<void> => {\r\n    const id = location.hash.substring(7);\r\n    const api = new NewsDetailApi(CONTENT_URL.replace('@id', id));\r\n\r\n\r\n    const { title, comments, content } = await api.getData();\r\n\r\n    this.store.makeRead(Number(id));\r\n\r\n    this.setTemplateData('comments', this.makeComment(comments))\r\n    this.setTemplateData('currentPage', String(this.store.currentPage))\r\n    this.setTemplateData('title', title);\r\n    this.setTemplateData('content', content);\r\n\r\n\r\n    this.updateView();\r\n    // const newsContent: NewsDetail = api.getData();\r\n\r\n\r\n  }\r\n\r\n\r\n  private makeComment(comments: NewsComments[]): string {\r\n    for (let i = 0; i < comments.length; i++) {\r\n      const comment: NewsComments = comments[i];\r\n\r\n      this.addHtml(`\r\n            <div style=\"padding-left: ${comment.level * 40}px;\" class=\"mt-4\">\r\n          <div class=\"text-gray-400\">\r\n            <i class=\"fa fa-sort-up mr-2\"></i>\r\n            <strong>${comment.user}</strong> ${comment.time_ago}\r\n          </div>\r\n          <p class=\"text-gray-700\">${comment.content}</p>\r\n        </div>    \r\n            `)\r\n\r\n      if (comment.comments.length > 0) {\r\n        this.addHtml(this.makeComment(comment.comments));\r\n      }\r\n    }\r\n\r\n    return this.getHtml();\r\n  }\r\n}","import View from \"../core/view\";\r\nimport { NewsFeed, NewsStore } from \"../types\";\r\nimport { NewsFeedApi } from \"../core/api\";\r\nimport { NEWS_URL } from \"../config\";\r\n\r\nconst template = `\r\n        <div class=\"bg-gray-600 min-h-screen\">\r\n        <div class=\"bg-white text-xl\">\r\n          <div class=\"mx-auto px-4\">\r\n            <div class=\"flex justify-between items-center py-6\">\r\n              <div class=\"flex justify-start\">\r\n                <h1 class=\"font-extrabold\">Hacker News</h1>\r\n              </div>\r\n              <div class=\"items-center justify-end\">\r\n                <a href=\"#/page/{{__prevpage__}}\" class=\"text-gray-500\">\r\n                  Previous\r\n                </a>\r\n                <a href=\"#/page/{{__nextpage__}}\" class=\"text-gray-500 ml-4\">\r\n                  Next\r\n                </a>\r\n              </div>\r\n            </div> \r\n          </div>\r\n        </div>\r\n        <div class=\"p-4 text-2xl text-gray-700\">\r\n          {{__newsfeed__}}        \r\n        </div>\r\n      </div>\r\n        `\r\n\r\nexport default class NewsFeedView extends View {\r\n  private api: NewsFeedApi;\r\n  private store: NewsStore;\r\n\r\n  constructor(containerId: string, store: NewsStore) { // 생성자 - 인스턴스를 만들어놓고 계속 쓰기위함.\r\n    // 상위클래스로부터 extends 받으면\r\n    // 반드시 상위클래스의 생성자를 명시적으로 호출해줘야함. \r\n\r\n    super(containerId, template);\r\n\r\n    this.store = store;\r\n    this.api = new NewsFeedApi(NEWS_URL);\r\n\r\n  }\r\n\r\n  render = async (): Promise<void> => {\r\n    this.store.currentPage = Number(location.hash.substr(7) || 1)\r\n\r\n\r\n    if (!this.store.hasFeeds) {\r\n      // newsFeed = store.feeds = makeFeeds(getData<NewsFeed[]>(NEWS_URL));\r\n\r\n      this.store.setFeeds(await this.api.getData());\r\n    }\r\n\r\n    for (let i = (this.store.currentPage - 1) * 10; i < this.store.currentPage * 10; i++) {\r\n      const { id, title, comments_count, user, points, time_ago, read } = this.store.getFeed(i);\r\n      // innerHTML이 HTML로 변환시켜준다는 뜻.\r\n      this.addHtml(\r\n        `\r\n                <div class=\"p-6 ${read ? 'bg-red-500' : 'bg-white'} mt-6 rounded-lg shadow-md transition-colors duration-500 hover:bg-green-100\">\r\n                <div class=\"flex\">\r\n                  <div class=\"flex-auto\">\r\n                    <a href=\"#/show/${id}\">${title}</a>  \r\n                  </div>\r\n                  <div class=\"text-center text-sm\">\r\n                    <div class=\"w-10 text-white bg-green-300 rounded-lg px-0 py-2\">${comments_count}</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"flex mt-3\">\r\n                  <div class=\"grid grid-cols-3 text-sm text-gray-500\">\r\n                    <div><i class=\"fas fa-user mr-1\"></i>${user}</div>\r\n                    <div><i class=\"fas fa-heart mr-1\"></i>${points}</div>\r\n                    <div><i class=\"far fa-clock mr-1\"></i>${time_ago}</div>\r\n                  </div>  \r\n                </div>\r\n              </div>    \r\n        `);\r\n    }\r\n\r\n    this.setTemplateData('newsfeed', this.getHtml());\r\n    this.setTemplateData('prevpage', String(this.store.prevPage));\r\n    this.setTemplateData('nextpage', String(this.store.nextPage));\r\n\r\n    this.updateView();\r\n\r\n  }\r\n\r\n  renderView = () => {\r\n\r\n  }\r\n  // private makeFeeds(): void {\r\n  //   for (let i = 0; i < this.feeds.length; i++) {\r\n  //     this.feeds[i].read = false;\r\n  //   }\r\n  //   this.store.totalPage = Number(this.feeds.length / 10);\r\n  // }\r\n}\r\n","export { default as NewsDetailView } from './news-detail.views';\r\nexport { default as NewsFeedView } from './news-feed-view';\r\n","import Store from \"./store\";\r\nimport Router from \"./core/router\";\r\nimport { NewsFeedView, NewsDetailView } from \"./page\";\r\n\r\n// Type alias, Interface\r\n// const store: Store = { // share contents // ,구분\r\n//   currentPage: 1,\r\n//   totalPage: 0,\r\n//   feeds: [],\r\n// }\r\n\r\n// 쉬운 방법 - 전역 객체로 만드는 방법\r\n// declare global {\r\n//   interface Window {\r\n//     store: Store;\r\n//   }\r\n// }\r\n\r\n// window.store = store;\r\nconst store = new Store();\r\n\r\nconst router: Router = new Router();\r\nconst newsFeedView = new NewsFeedView('root', store);\r\nconst newsDetailView = new NewsDetailView('root', store);\r\n\r\n\r\nrouter.setDefaultPage(newsFeedView);\r\nrouter.addRoutePath('/page/', newsFeedView);\r\nrouter.addRoutePath('/show/', newsDetailView);\r\n\r\nrouter.route();\r\n\r\n\r\n// Mixin\r\n// function applyApiMixins(targetClass: any, baseclasses: any[]): void {\r\n//   baseclasses.forEach(baseclass => {\r\n//     Object.getOwnPropertyNames(baseclass.prototype).forEach(name => {\r\n//       const descriptor = Object.getOwnPropertyDescriptor(baseclass.property, name);\r\n\r\n//       if (descriptor) {\r\n//         Object.defineProperty(targetClass.prototype, name, descriptor)\r\n//       }\r\n//     })\r\n//   })\r\n// }\r\n\r\n// // compiler 에게 API 상속받은 거라고 알려주기.\r\n// interface NewsFeedApi extends Api { };\r\n// interface NewsDetailApi extends Api { };\r\n\r\n// applyApiMixins(NewsFeedApi, [Api]);\r\n// applyApiMixins(NewsDetailApi, [Api]);"]}